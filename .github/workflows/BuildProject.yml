name: Build TerraformRegistryClient Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln

    - name: Clean
      run: dotnet clean ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln --configuration Release

    - name: Build
      run: dotnet build ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln --configuration Release --no-restore

    - name: Test
      run: dotnet test ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln --configuration Release --no-build

  pack_and_publish:
    needs: [build_and_test]
    if: success()
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln

    - name: Build
      run: dotnet build ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln --configuration Release --no-restore

    - name: Package
      run: dotnet pack ${{ github.workspace }}/TerraformRegistryClient/TerraformRegistryClient.sln --configuration Release --output nupkgs

    - name: Publish NuGet Package
      run: |
        nuget push **/*.nupkg -ApiKey ${{secrets.NUGET_API_KEY}} -Source  https://api.nuget.org/v3/index.json
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
